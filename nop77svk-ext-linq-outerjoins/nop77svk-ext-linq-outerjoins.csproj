<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <RootNamespace>NoP77svk.Ext.Linq</RootNamespace>
    <Nullable>disable</Nullable>
	<RepositoryUrl>https://github.com/nop77svk/dotnet-commons</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <Authors>Peter Hraško</Authors>
    <Company>Freelance</Company>
    <PackageProjectUrl>https://stackoverflow.com/a/43669055/3706181</PackageProjectUrl>
    <Description>Outer joins implemented as LINQ extensions over IEnumerable and IQueryable.
Source: https://stackoverflow.com/a/43669055/3706181
Thanks to NetMage @ StackOverflow.com!

Method parameter names (left, right,...) changed to better reflect their nature (outer, inner, anti, semi,...) and sometimes order of the parameters switched to adhere to usual natural SQL writing flow.</Description>
    <Copyright>Copyleft, I assume</Copyright>
    <Product>Pierre's .NET Commons</Product>
    <PackageId>NoP77svk.LinqOuterJoins</PackageId>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
	  <ErrorReport>none</ErrorReport>
	  <DebugType>none</DebugType>
	  <DebugSymbols>false</DebugSymbols>
	  <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="..\analyzer-settings\GlobalSuppressions.cs" Link="extras\GlobalSuppressions.cs" />
  </ItemGroup>

</Project>
